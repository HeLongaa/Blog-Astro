// 统一的浮动按钮样式
// 变量定义
@button-size: 2.6rem;
@button-expanded-width: 4.5rem;
@button-border-radius: 2rem;
@button-primary-color: #49B1F5;
@button-transition: all 0.3s ease-in-out;
@button-icon-size: 20px;
@button-text-size: 0.75rem;
@button-hover-gap: 0.4rem;
@button-hover-padding: 0.7rem;
@button-spacing: 1rem; // 按钮之间的间距

// 响应式变量
@mobile-breakpoint: 768px;
@small-mobile-breakpoint: 480px;
@mobile-right-position: 1rem;
@mobile-hover-padding: 0.75rem;

// 浮动按钮容器
.vh-floating-buttons-container {
    position: fixed;
    right: var(--vh-back-top, 1.5rem);
    bottom: 3rem;
    display: flex;
    flex-direction: column;
    align-items: flex-end; // 按钮右对齐
    gap: 0; // 移除gap，改用margin控制间距，这样可以有平滑的过渡动画
    z-index: 9;
    pointer-events: none; // 容器本身不接收事件，让按钮接收
    width: 5.35rem; // 固定容器宽度为最大按钮宽度

    // 移动端适配
    @media screen and (max-width: @mobile-breakpoint) {
        right: @mobile-right-position;
    }

    // 为按钮位置变化添加平滑动画
    .vh-floating-button {
        // 添加底部间距，代替gap
        margin-bottom: @button-spacing;
        
        // 基础过渡动画，包含高度和间距的变化
        // 特别注意：为所有可能影响布局的属性添加过渡
        transition-property: opacity, transform, background-color, color, box-shadow, width, min-width, max-width, height, margin-bottom, margin-top;
        transition-duration: 0.3s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

        // 最后一个按钮不需要底部间距
        &:last-child {
            margin-bottom: 0;
        }

        // 当按钮不在动画状态时，为布局变化添加更长的过渡时间
        // 这确保了当其他按钮显示/隐藏时，剩余按钮的位置变化有平滑动画
        &:not(.vh-hide):not(.vh-show):not(.vh-toc-hide):not(.vh-completely-hidden) {
            transition-duration: 0.4s; // 稍长的过渡时间，让位置变化更明显
            transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); // 更平滑的缓动函数
        }
    }
}

// 统一的浮动按钮基础样式
.vh-floating-button {
    position: relative;
    height: @button-size;
    width: var(--button-width, @button-size) !important;
    min-width: var(--button-width, @button-size) !important;
    max-width: var(--button-width, @button-size) !important;
    border-radius: @button-border-radius;
    border: 1px solid @button-primary-color;
    background-color: var(--vh-white-color);
    color: @button-primary-color;
    cursor: pointer;
    display: none;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transform: translateX(100px); // 初始状态在右侧外部
    transition: @button-transition; // 基础动画由容器统一管理
    box-shadow: var(--vh-box-shadow);
    overflow: hidden;
    padding: 0;
    pointer-events: auto; // 按钮本身接收事件

    .button-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0;
        padding: 0;
        transition: @button-transition;
        white-space: nowrap;
        height: 100%;
        width: 100%;
    }

    .button-text {
        font-size: @button-text-size;
        font-weight: 500;
        opacity: 0;
        width: 0;
        margin-left: 0;
        transition: @button-transition;
        overflow: hidden;
    }

    svg {
        width: @button-icon-size;
        height: @button-icon-size;
        transition: all 0.2s ease-in-out;
        flex-shrink: 0;
    }

    // 显示状态 - 按钮可见时的最终状态
    &.vh-visible {
        display: flex;
        opacity: 1;
        transform: translateX(0);
        pointer-events: auto;
    }

    // 统一的显示动画 - 从右侧滑入，稍微延迟以等待其他按钮位置调整
    &.vh-show {
        display: flex !important;
        opacity: 1 !important;
        transform: translateX(0) !important;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.1s !important; // 添加0.1s延迟
        pointer-events: auto !important;
    }

    // 统一的隐藏动画 - 所有按钮都水平向右滑出
    &.vh-hide {
        opacity: 0 !important;
        transform: translateX(100px) !important; // 统一向右滑出
        height: 0 !important; // 高度变为0
        margin-bottom: 0 !important; // 间距变为0
        margin-top: 0 !important;
        overflow: hidden !important; // 隐藏内容
        transition: all 0.3s cubic-bezier(0.4, 0, 0.6, 1) !important;
        pointer-events: none !important;
    }

    // 目录打开时的隐藏动画 - 也使用水平向右滑出
    &.vh-toc-hide {
        opacity: 0 !important;
        transform: translateX(100px) !important; // 改为统一的水平向右滑出
        height: 0 !important; // 高度变为0
        margin-bottom: 0 !important; // 间距变为0
        margin-top: 0 !important;
        overflow: hidden !important; // 隐藏内容
        transition: all 0.25s cubic-bezier(0.4, 0, 0.6, 1) !important;
        pointer-events: none !important;
    }

    // 动画执行期间保持显示状态（但不使用display:none）
    &.vh-show,
    &.vh-hide,
    &.vh-toc-hide {
        display: flex !important;
    }

    // 完全隐藏状态 - 用于替代display:none，也使用统一的水平向右位置
    &.vh-completely-hidden {
        display: flex !important;
        opacity: 0 !important;
        height: 0 !important;
        margin-bottom: 0 !important;
        margin-top: 0 !important;
        overflow: hidden !important;
        pointer-events: none !important;
        transform: translateX(100px) !important; // 统一向右位置
    }



    // 激活状态
    &:active {
        transform: translateX(0) scale(0.95);
    }

    &:focus {
        outline: none;
    }
}

// 各个按钮的特定样式和显示逻辑
.vh-floating-buttons-container .vh-back-top {
    // 回到顶部按钮在最上方
    order: 1;
}

// 独立的悬浮效果 - 使用CSS变量控制宽度
.vh-floating-buttons-container .vh-back-top.vh-floating-button:hover:not(.vh-hide):not(.vh-toc-hide) {
    --button-width: 5.35rem;
    background-color: @button-primary-color !important;
    color: #fff !important;
    transform: translateX(0) scale(1.02) !important;
    box-shadow: 0 4px 12px rgba(73, 177, 245, 0.3) !important;

    .button-content {
        gap: @button-hover-gap !important;
        padding: 0 @button-hover-padding !important;
    }

    .button-text {
        opacity: 1 !important;
        width: auto !important;
        margin-left: @button-hover-gap !important;
    }
}

.vh-floating-buttons-container .vh-mobile-toc-button {
    // 移动端目录按钮在第二位
    order: 2;

    // 移动端触摸优化
    @media (max-width: 888px) {
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;
        user-select: none;
    }

    // 桌面端隐藏移动端目录按钮
    @media screen and (min-width: 889px) {
        display: none !important;
    }
}

// 独立的悬浮效果 - 目录按钮在所有屏幕下都使用 5.35rem
.vh-floating-buttons-container .vh-mobile-toc-button.vh-floating-button:hover:not(.vh-hide):not(.vh-toc-hide) {
    --button-width: 5.35rem;
    background-color: @button-primary-color !important;
    color: #fff !important;
    transform: translateX(0) scale(1.02) !important;
    box-shadow: 0 4px 12px rgba(73, 177, 245, 0.3) !important;

    .button-content {
        gap: @button-hover-gap !important;
        padding: 0 @button-hover-padding !important;
    }

    .button-text {
        opacity: 1 !important;
        width: auto !important;
        margin-left: @button-hover-gap !important;
    }
}

.vh-floating-buttons-container .vh-links-jump-button {
    // 友链按钮在第三位
    order: 3;

    // 只在有友链内容的页面显示
    body:not(:has(.links-main)) & {
        display: none !important;
    }
}

// 独立的悬浮效果
.vh-floating-buttons-container .vh-links-jump-button.vh-floating-button:hover:not(.vh-hide):not(.vh-toc-hide) {
    --button-width: 5.35rem;
    background-color: @button-primary-color !important;
    color: #fff !important;
    transform: translateX(0) scale(1.02) !important;
    box-shadow: 0 4px 12px rgba(73, 177, 245, 0.3) !important;

    .button-content {
        gap: @button-hover-gap !important;
        padding: 0 @button-hover-padding !important;
    }

    .button-text {
        opacity: 1 !important;
        width: auto !important;
        margin-left: @button-hover-gap !important;
    }
}

.vh-floating-buttons-container .vh-comment-jump-button {
    // 评论按钮在最下方
    order: 4;

    // 没有评论时不显示
    body:not(:has(.vh-comment)) & {
        display: none !important;
    }
}

// 独立的悬浮效果
.vh-floating-buttons-container .vh-comment-jump-button.vh-floating-button:hover:not(.vh-hide):not(.vh-toc-hide) {
    --button-width: 5.35rem;
    background-color: @button-primary-color !important;
    color: #fff !important;
    transform: translateX(0) scale(1.02) !important;
    box-shadow: 0 4px 12px rgba(73, 177, 245, 0.3) !important;

    .button-content {
        gap: @button-hover-gap !important;
        padding: 0 @button-hover-padding !important;
    }

    .button-text {
        opacity: 1 !important;  
        width: auto !important;
        margin-left: @button-hover-gap !important;
    }
}

// 暗色模式适配
html[data-theme="dark"] {
    .vh-floating-button {
        background-color: var(--vh-white-color);
        border-color: @button-primary-color;
        color: @button-primary-color;

        &:hover {
            background-color: @button-primary-color;
            color: var(--vh-white-color);
        }
    }
}

// 移动端适配
@media screen and (max-width: @mobile-breakpoint) {
    .vh-floating-button {
        height: @button-size;

        .button-text {
            font-size: @button-text-size;
        }

        svg {
            width: @button-icon-size;
            height: @button-icon-size;
        }
    }
}



// 平板端和移动端都隐藏侧边栏目录
@media screen and (max-width: 888px) {
    .vh-aside-item.toc {
        display: none !important;
    }
}